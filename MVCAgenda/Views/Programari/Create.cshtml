@{
    ViewData["Title"] = "Create";
}

@if (User.Identity.IsAuthenticated)
{
    @model MVCAgenda.Models.ProgramareCompletaViewModel

    <h1>Adauga o programare</h1>
    <hr />


    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <input asp-for="PacientId" type="hidden" />
                <div class="form-group">
                    <label asp-for="Nume" class="control-label"></label>
                    <input asp-for="Nume" class="form-control" />
                    <span asp-validation-for="Nume" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Prenume" class="control-label"></label>
                    <input asp-for="Prenume" class="form-control" />
                    <span asp-validation-for="Prenume" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NrDeTelefon" class="control-label"></label>
                    <input asp-for="NrDeTelefon" class="form-control" />
                    <span asp-validation-for="NrDeTelefon" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Mail" class="control-label"></label>
                    <input asp-for="Mail" class="form-control" />
                    <span asp-validation-for="Mail" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Blacklist" class="control-label"></label>
                    <select asp-for="Blacklist" class="form-control">
                        <option value="0">Nu</option>
                        <option value="1">Da</option>
                    </select>
                    <span asp-validation-for="Blacklist" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CameraId" class="control-label"></label>
                    <select asp-for="CameraId" class="form-control" asp-items="ViewBag.CameraId"></select>
                </div>
                <div class="form-group">
                    <label asp-for="MedicId" class="control-label"></label>
                    <select asp-for="MedicId" class="form-control" asp-items="ViewBag.MedicId"></select>
                </div>
                <div class="form-group">
                    <label asp-for="DataConsultatie" class="control-label"></label>
                    <input asp-for="DataConsultatie" class="form-control" />
                    <span asp-validation-for="DataConsultatie" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="OraConsultatie" class="control-label"></label>
                    <input asp-for="OraConsultatie" class="form-control" />
                    <span asp-validation-for="OraConsultatie" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Procedura" class="control-label"></label>
                    <input asp-for="Procedura" class="form-control" />
                    <span asp-validation-for="Procedura" class="text-danger"></span>
                </div>

                <input asp-for="Efectuata" type="hidden" />
                <input asp-for="ResponsabilProgramare" type="hidden" />
                <input asp-for="DataCreeareConsultatie" type="hidden" />
                <div class="form-group">
                    <input type="submit" value="Adauga" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Inapoi la lista cu programari</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

        <!--
        let el = document.querySelector(".input-wrap .input");
        let widthMachine = document.querySelector(".input-wrap .width-machine");
        el.addEventListener("keyup", () => {
        widthMachine.innerHTML = el.value;
        });

        // Dealing with Textarea Height
        function calcHeight(value) {
        let numberOfLineBreaks = (value.match(/\n/g) || []).length;
        // min-height + lines x line-height + padding + border
        let newHeight = 20 + numberOfLineBreaks * 20 + 12 + 2;
        return newHeight;
        }

        let textarea = document.querySelector(".resize-ta");
        textarea.addEventListener("keyup", () => {
        textarea.style.height = calcHeight(textarea.value) + "px";
        });
        -->
    }
}